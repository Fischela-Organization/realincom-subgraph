// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddressManagerUpdated extends ethereum.Event {
  get params(): AddressManagerUpdated__Params {
    return new AddressManagerUpdated__Params(this);
  }
}

export class AddressManagerUpdated__Params {
  _event: AddressManagerUpdated;

  constructor(event: AddressManagerUpdated) {
    this._event = event;
  }

  get addressManagerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get innitiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdminCreated extends ethereum.Event {
  get params(): AdminCreated__Params {
    return new AdminCreated__Params(this);
  }
}

export class AdminCreated__Params {
  _event: AdminCreated;

  constructor(event: AdminCreated) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isAdmin(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class RealIncomAccessControl extends ethereum.SmartContract {
  static bind(address: Address): RealIncomAccessControl {
    return new RealIncomAccessControl("RealIncomAccessControl", address);
  }

  addressManager(): Address {
    let result = super.call("addressManager", "addressManager():(address)", []);

    return result[0].toAddress();
  }

  try_addressManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "addressManager",
      "addressManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAdmin(sender: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(sender)
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(sender: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(sender)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAuthorized(sender: Address): boolean {
    let result = super.call("isAuthorized", "isAuthorized(address):(bool)", [
      ethereum.Value.fromAddress(sender)
    ]);

    return result[0].toBoolean();
  }

  try_isAuthorized(sender: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAuthorized", "isAuthorized(address):(bool)", [
      ethereum.Value.fromAddress(sender)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class MakeAdminCall extends ethereum.Call {
  get inputs(): MakeAdminCall__Inputs {
    return new MakeAdminCall__Inputs(this);
  }

  get outputs(): MakeAdminCall__Outputs {
    return new MakeAdminCall__Outputs(this);
  }
}

export class MakeAdminCall__Inputs {
  _call: MakeAdminCall;

  constructor(call: MakeAdminCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MakeAdminCall__Outputs {
  _call: MakeAdminCall;

  constructor(call: MakeAdminCall) {
    this._call = call;
  }
}

export class UpdateAddressManagerCall extends ethereum.Call {
  get inputs(): UpdateAddressManagerCall__Inputs {
    return new UpdateAddressManagerCall__Inputs(this);
  }

  get outputs(): UpdateAddressManagerCall__Outputs {
    return new UpdateAddressManagerCall__Outputs(this);
  }
}

export class UpdateAddressManagerCall__Inputs {
  _call: UpdateAddressManagerCall;

  constructor(call: UpdateAddressManagerCall) {
    this._call = call;
  }

  get _addressManagerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateAddressManagerCall__Outputs {
  _call: UpdateAddressManagerCall;

  constructor(call: UpdateAddressManagerCall) {
    this._call = call;
  }
}
